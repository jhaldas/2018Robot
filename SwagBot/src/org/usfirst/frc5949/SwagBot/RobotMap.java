// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5949.SwagBot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController liftyboiiLiftymotorboi;
    public static SpeedController driveTrainBackLeft;
    public static SpeedController driveTrainBackRight;
    public static SpeedController driveTrainFrontRight;
    public static SpeedController driveTrainFrontLeft;
    public static RobotDrive driveTrainRobotDrive;
    public static SpeedController clawClawMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        liftyboiiLiftymotorboi = new Talon(4);
        LiveWindow.addActuator("Liftyboii", "Liftymotorboi", (Talon) liftyboiiLiftymotorboi);
        liftyboiiLiftymotorboi.setInverted(true);
        driveTrainBackLeft = new Talon(0);
        LiveWindow.addActuator("DriveTrain", "BackLeft", (Talon) driveTrainBackLeft);
        driveTrainBackLeft.setInverted(true);
        driveTrainBackRight = new Talon(3);
        LiveWindow.addActuator("DriveTrain", "BackRight", (Talon) driveTrainBackRight);
        driveTrainBackRight.setInverted(true);
        driveTrainFrontRight = new Talon(2);
        LiveWindow.addActuator("DriveTrain", "FrontRight", (Talon) driveTrainFrontRight);
        driveTrainFrontRight.setInverted(false);
        driveTrainFrontLeft = new Talon(1);
        LiveWindow.addActuator("DriveTrain", "FrontLeft", (Talon) driveTrainFrontLeft);
        driveTrainFrontLeft.setInverted(true);
        driveTrainRobotDrive = new RobotDrive(driveTrainFrontLeft, driveTrainBackLeft,
              driveTrainFrontRight, driveTrainBackRight);
        
        driveTrainRobotDrive.setSafetyEnabled(true);
        driveTrainRobotDrive.setExpiration(0.1);
        driveTrainRobotDrive.setSensitivity(0.5);
        driveTrainRobotDrive.setMaxOutput(1.0);

        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveTrainRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        clawClawMotor = new Talon(5);
        LiveWindow.addActuator("Claw", "ClawMotor", (Talon) clawClawMotor);
        clawClawMotor.setInverted(true);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
